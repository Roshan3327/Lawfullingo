// <auto-generated />
using System;
using Data.Lawfullingo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Lawfullingo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250703020851_intity")]
    partial class intity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Lawfullingo.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Class_Videos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("video_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Class_Videos");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("charges_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("contact_no")
                        .HasColumnType("int");

                    b.Property<decimal>("coupon_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("course_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("course_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("discount_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("discount_percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("purchase_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("teacher_id")
                        .HasColumnType("int");

                    b.Property<int>("teachersid")
                        .HasColumnType("int");

                    b.Property<DateTime>("validity")
                        .HasColumnType("datetime2");

                    b.Property<int>("whatsapp_no")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("teachersid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Course_Class", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Class_Videosid")
                        .HasColumnType("int");

                    b.Property<int?>("Teachersid")
                        .HasColumnType("int");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("teacher_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<int>("video_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Class_Videosid");

                    b.HasIndex("Teachersid");

                    b.HasIndex("course_id");

                    b.HasIndex("teacher_id");

                    b.ToTable("Courses_Class");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("course_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("course_discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("courseid");

                    b.HasIndex("usersid");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Teachers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.Property<int>("mobile")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.Property<int>("mobile")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("user_dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Course", b =>
                {
                    b.HasOne("Entity.Lawfullingo.Category", "category")
                        .WithMany("courses")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Lawfullingo.Teachers", "teachers")
                        .WithMany("courses")
                        .HasForeignKey("teachersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("teachers");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Course_Class", b =>
                {
                    b.HasOne("Entity.Lawfullingo.Class_Videos", "Class_Videos")
                        .WithMany()
                        .HasForeignKey("Class_Videosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Lawfullingo.Teachers", null)
                        .WithMany("course_Classes")
                        .HasForeignKey("Teachersid");

                    b.HasOne("Entity.Lawfullingo.Course", "course")
                        .WithMany()
                        .HasForeignKey("course_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Lawfullingo.Teachers", "Teachers")
                        .WithMany()
                        .HasForeignKey("teacher_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class_Videos");

                    b.Navigation("Teachers");

                    b.Navigation("course");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Purchase", b =>
                {
                    b.HasOne("Entity.Lawfullingo.Course", "course")
                        .WithMany("purchase")
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Lawfullingo.Users", "users")
                        .WithMany("purchases")
                        .HasForeignKey("usersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Category", b =>
                {
                    b.Navigation("courses");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Course", b =>
                {
                    b.Navigation("purchase");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Teachers", b =>
                {
                    b.Navigation("course_Classes");

                    b.Navigation("courses");
                });

            modelBuilder.Entity("Entity.Lawfullingo.Users", b =>
                {
                    b.Navigation("purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
